{"version":3,"sources":["components/list/List.module.css","components/header/Header.module.css","components/dropdown/Dropdown.module.css","components/footer/Footer.module.css","components/dropDownMenu/DropDownMenu.module.css","components/forma/Forma.module.css","components/main/Main.module.css","components/board/Board.module.css","images/ellipse.svg","images/avatar.svg","images/arrow.svg","images/arrow_up.svg","components/dropDownMenu/DropDownMenu.js","components/header/Header.js","config.js","images/plus.svg","components/forma/Forma.js","images/arrowSelect.svg","components/dropdown/Dropdown.js","components/list/List.js","components/board/Board.js","images/line1.svg","images/line2.svg","components/task-detail/TaskDetail.js","components/main/Main.js","components/footer/Footer.js","App.js","index.js","components/task-detail/TaskDetail.module.css"],"names":["module","exports","DropDownMenu","_jsxs","_Fragment","children","_jsx","className","css","triangle","menu","link","Header","_useState","useState","_useState2","_slicedToArray","isDropDownMenu","setDropDownMenu","handleClick","header","wrapper","title","userAvatar","ellipse","src","alt","avatar","arrow","onClick","arrow_up","LIST_TYPE","BACKLOG","READY","IN_PROGRESS","FINISHED","LIST_TITLE","_LIST_TITLE","_defineProperty","Forma","props","addNewTask","isButtonSubmit","setButtonSubmit","isFormOpen","setFormOpen","ref","name","descriptions","values","setValues","_useState3","_useState4","isFormValid","setFormValid","_useState5","_useState6","fillInForm","setFillInForm","handleChange","e","fieldName","target","_objectSpread","value","form","id","onSubmit","preventDefault","type","placeholder","onChange","error","Dropdown","tasks","setTasks","dropdownTask","isDropdownOpen","setDropdownOpen","handleOptionClick","clickTaskIndex","findIndex","task","modifiedTasks","map","upTitle","status","console","log","toUpperCase","wrapperSelect","select","divSelect","arrowSelect","taskName","List","filterTasks","useRef","_useState7","_useState8","isDisabled","setDisabled","filter","useEffect","length","list","listTitle","Link","to","concat","taskLink","submit","buttonDisabled","disabled","plus","button","Board","newTask","String","Date","now","created","toISOString","_toConsumableArray","board","Object","TaskDetail","taskId","useRouteMatch","params","isEdit","setEdit","isButton","setButton","find","taskDetail","taskHeader","cross","line1","line2","taskDescriptions","index","indexOf","slice","back","Main","main","Switch","Route","exact","path","Footer","taskBacklog","taskFinished","footer","activeTasks","finishedTasks","info","App","initialState","JSON","parse","window","localStorage","getItem","setItem","stringify","Router","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2e7ae5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__2UiTK\",\"listTitle\":\"List_listTitle__1LSHX\",\"task\":\"List_task__cvAX_\",\"button\":\"List_button__3NxtD\",\"submit\":\"List_submit__3I2gA\",\"buttonDisabled\":\"List_buttonDisabled__2vUzv\",\"plus\":\"List_plus__2McK2\",\"taskLink\":\"List_taskLink__2RtVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Nl8d\",\"wrapper\":\"Header_wrapper__2Bd5l\",\"title\":\"Header_title__3my6a\",\"userAvatar\":\"Header_userAvatar__2wiDV\",\"ellipse\":\"Header_ellipse__3dzHw\",\"avatar\":\"Header_avatar__2z6nm\",\"arrow\":\"Header_arrow__1QaoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Dropdown_select__1BU8O\",\"wrapperSelect\":\"Dropdown_wrapperSelect__3IXEj\",\"taskName\":\"Dropdown_taskName__1yGA0\",\"wrapper\":\"Dropdown_wrapper__3NynI\",\"divSelect\":\"Dropdown_divSelect__3PCZX\",\"arrowSelect\":\"Dropdown_arrowSelect__3lTN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__kxFNQ\",\"wrapper\":\"Footer_wrapper__1VvE-\",\"activeTasks\":\"Footer_activeTasks__16ZTc\",\"finishedTasks\":\"Footer_finishedTasks__dSEwM\",\"info\":\"Footer_info__2uRz0\",\"tasks\":\"Footer_tasks__OqDay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"DropDownMenu_menu__3dc6g\",\"triangle\":\"DropDownMenu_triangle__3P6_H\",\"link\":\"DropDownMenu_link__RdC5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Forma_form__1K49y\",\"name\":\"Forma_name__27OJM\",\"descriptions\":\"Forma_descriptions__3c9d_\",\"error\":\"Forma_error__1uxWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2wvIH\",\"wrapper\":\"Main_wrapper__3AsLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__Hyoiu\"};","export default __webpack_public_path__ + \"static/media/ellipse.4021e6e5.svg\";","export default __webpack_public_path__ + \"static/media/avatar.f7d3d63a.svg\";","export default __webpack_public_path__ + \"static/media/arrow.74824462.svg\";","export default __webpack_public_path__ + \"static/media/arrow_up.4bd38d8c.svg\";","import React from 'react';\r\nimport css from './DropDownMenu.module.css';\r\n\r\nconst DropDownMenu = () => {\r\n   return (\r\n      <>\r\n         <div className={css.triangle}></div>\r\n         <div className={css.menu}>\r\n            <option className={css.link}>Profile</option>\r\n            <option className={css.link}>Log Out</option>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default DropDownMenu;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport css from './Header.module.css';\r\nimport ellipse from '../../images/ellipse.svg';\r\nimport avatar from '../../images/avatar.svg';\r\nimport arrow from '../../images/arrow.svg';\r\nimport arrow_up from '../../images/arrow_up.svg';\r\nimport DropDownMenu from '../dropDownMenu/DropDownMenu';\r\n\r\nconst Header = () => {\r\n   const [isDropDownMenu, setDropDownMenu] = useState(false)\r\n\r\n   const handleClick = () => {\r\n      setDropDownMenu(!isDropDownMenu)\r\n   }\r\n\r\n   return (\r\n      <header className={css.header}>\r\n         <div className={css.wrapper}>\r\n            <h1 className={css.title}>Awesome Kanban Board</h1>\r\n            <div className={css.userAvatar}>\r\n               <div>\r\n                  <img className={css.ellipse} src={ellipse} alt='' />\r\n                  <img className={css.avatar} src={avatar} alt='' />\r\n               </div>\r\n               {!isDropDownMenu && (\r\n                  <img className={css.arrow} onClick={handleClick} src={arrow} alt='' />)}\r\n               {isDropDownMenu && (\r\n                  <>\r\n                     <img className={css.arrow} onClick={handleClick} src={arrow_up} alt='' />\r\n                     <DropDownMenu />\r\n                  </>)}\r\n            </div>\r\n         </div>\r\n      </header>\r\n   )\r\n}\r\nexport default Header;","const LIST_TYPE = {\r\n   BACKLOG: \"backlog\",\r\n   READY: \"ready\",\r\n   IN_PROGRESS: \"in Progress\",\r\n   FINISHED: \"finished\",\r\n}\r\n\r\nconst LIST_TITLE = {\r\n   [LIST_TYPE.BACKLOG]: \"Backlog\", /*у блока(листа) с типом 'backlog' заголовок (title) равен 'Backlog' */\r\n   [LIST_TYPE.READY]: \"Ready\",\r\n   [LIST_TYPE.IN_PROGRESS]: \"In Progress\",\r\n   [LIST_TYPE.FINISHED]: \"Finished\",\r\n}\r\nexport { LIST_TYPE, LIST_TITLE }","export default __webpack_public_path__ + \"static/media/plus.a0856840.svg\";","import React from 'react';\r\nimport { useState } from 'react';\r\nimport css from './Forma.module.css';\r\n\r\nconst Forma = (props) => {\r\n   const { addNewTask, isButtonSubmit, setButtonSubmit, isFormOpen, setFormOpen, ref } = props\r\n   const [values, setValues] = useState({\r\n      name: '',\r\n      descriptions: ''\r\n   })\r\n   const [isFormValid, setFormValid] = useState(true)\r\n   //если форма не заполнена, то поле нажатия кнопки \"Submit\" (fillInForm=true) выходит предупреждение, \r\n   //после повтоного нажатия кнопки \"Submit\" (fillInForm=false) форма закрывается\r\n   const [fillInForm, setFillInForm] = useState(true)\r\n\r\n   //изменение данных в полях input и texterea\r\n   const handleChange = (e) => {\r\n      setFormValid(true)\r\n      const fieldName = e.target.name  //свойство name соответствующего элемента (inpt, textarea)\r\n      setValues({ ...values, [fieldName]: e.target.value }) //в поле, которое меняет пользователь записали значение, которое меняет пользователь\r\n   }\r\n\r\n\r\n   const handleFormSubmit = (e) => {\r\n      e.preventDefault() //запрет на отправку формы, при этом не будет перезагружаться страница\r\n      if (values.name) { //если поле импута не пустое, то данные формы будут переданы в newTask\r\n         addNewTask(values.name, values.descriptions)\r\n         setFormValid(true) //сброс на дефолт тех ошибок, которые были до этого\r\n         setFillInForm(!fillInForm)\r\n         setValues({ name: '', descriptions: '' })\r\n         setButtonSubmit(!isButtonSubmit)\r\n         setFormOpen(!isFormOpen)\r\n      } else {\r\n         if (fillInForm) {\r\n            setFormValid(false)\r\n            setFillInForm(false)\r\n         } else {\r\n            setButtonSubmit(false)\r\n            setFormOpen(false)\r\n         }\r\n      }\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <form className={css.form} id='btn' ref={ref} onSubmit={handleFormSubmit}>\r\n            <input className={css.name}\r\n               id='taskName'\r\n               type='text'\r\n               name='name'\r\n               value={values.name}\r\n               placeholder='Enter task name'\r\n               onChange={handleChange} />\r\n            {!isFormValid && <p className={css.error}>The task must have a title</p>}\r\n            <textarea className={css.descriptions}\r\n               id='taskDescriptions'\r\n               type='text'\r\n               name='descriptions'\r\n               placeholder='Enter task description'\r\n               value={values.descriptions}\r\n               onChange={handleChange} />\r\n         </form >\r\n      </>\r\n   )\r\n}\r\nexport default Forma;\r\n","export default __webpack_public_path__ + \"static/media/arrowSelect.4843ed17.svg\";","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { LIST_TYPE } from '../../config';\r\nimport css from './Dropdown.module.css';\r\nimport arrowSelect from '../../images/arrowSelect.svg'\r\n\r\nconst Dropdown = (props) => {\r\n   const { tasks, setTasks, title, isButtonSubmit, setButtonSubmit, dropdownTask } = props\r\n   const [isDropdownOpen, setDropdownOpen] = useState(false)\r\n\r\n   const handleSelectClick = () => {\r\n      if (!isDropdownOpen) {\r\n         setDropdownOpen(!isDropdownOpen)\r\n      } else {\r\n         setButtonSubmit(!isButtonSubmit)\r\n         setDropdownOpen(!isDropdownOpen)\r\n      }\r\n   }\r\n\r\n   const handleOptionClick = (e) => {\r\n      //определим index задачи из массива dropdownTask, по которой был клик\r\n      const clickTaskIndex = dropdownTask.findIndex(task => e.target.value === task.name)\r\n\r\n      //массив с измененной задачей\r\n      const modifiedTasks = tasks.map(task => {\r\n         if (task.id === dropdownTask[clickTaskIndex].id) {\r\n            let upTitle;\r\n            if (title === 'In Progress') {\r\n               return {\r\n                  ...task, status: LIST_TYPE.IN_PROGRESS\r\n               }\r\n            }\r\n            upTitle = title\r\n            console.log('upTitle=', upTitle)\r\n            return { ...task, status: LIST_TYPE[upTitle.toUpperCase()] }\r\n         }\r\n         return task\r\n      })\r\n      setTasks(modifiedTasks)\r\n      setDropdownOpen(!isDropdownOpen)\r\n      setButtonSubmit(!isButtonSubmit)\r\n   }\r\n\r\n\r\n   return (\r\n      <div className={css.wrapperSelect}>\r\n         {isButtonSubmit &&\r\n            (<seleсt className={css.select} value={''}>\r\n               <div className={css.divSelect}></div>\r\n               <img className={css.arrowSelect} src={arrowSelect} alt='' onClick={handleSelectClick} />\r\n            </seleсt>)\r\n         }\r\n         {isDropdownOpen &&\r\n            (<div className={css.wrapper}>\r\n               {dropdownTask.map(task => {\r\n                  return (\r\n                     <option key={task.id} value={task.name} className={css.taskName} onClick={handleOptionClick}>{task.name}</option>\r\n                  )\r\n               })}\r\n            </div>)\r\n         }\r\n      </div >\r\n   )\r\n}\r\nexport default Dropdown;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport css from './List.module.css';\r\nimport plus from '../../images/plus.svg';\r\nimport Forma from '../forma/Forma';\r\nimport { LIST_TYPE } from '../../config';\r\nimport Dropdown from '../dropdown/Dropdown';\r\n\r\nconst List = (props) => {\r\n   const { tasks, setTasks, filterTasks, addNewTask, title, type } = props\r\n   const [isButtonSubmit, setButtonSubmit] = useState(false)\r\n   const [isFormOpen, setFormOpen] = useState(false)\r\n   const ref = useRef(null)\r\n   const [isDropdownOpen, setDropdownOpen] = useState(false)\r\n   const [isDisabled, setDisabled] = useState(false)\r\n   // const [isDisable, setDisable] = useEffect(false)\r\n\r\n   const handleAddClick = () => {\r\n      setButtonSubmit(!isButtonSubmit)\r\n      setFormOpen(!isFormOpen)\r\n      setDropdownOpen(true)\r\n   }\r\n\r\n   let dropdownTask;\r\n   switch (title) {\r\n      case 'Ready':\r\n         dropdownTask = tasks.filter(task => task.status === 'backlog');\r\n         break;\r\n      case 'In Progress':\r\n         dropdownTask = tasks.filter(task => task.status === 'ready');\r\n         break;\r\n      case 'Finished':\r\n         dropdownTask = tasks.filter(task => task.status === 'in Progress');\r\n         break;\r\n      default:\r\n         dropdownTask = [1];\r\n         break;\r\n   }\r\n   useEffect(() => {\r\n      //переключение кнопка Add с активной на неактивную\r\n      if (dropdownTask.length === 0) {\r\n         setDisabled(!isDisabled)\r\n      }\r\n      //переключение кнопка Add с неактивной на активную\r\n      if (dropdownTask.length !== 0 && isDisabled) {\r\n         setDisabled(!isDisabled)\r\n      }\r\n   }, [dropdownTask.length])\r\n\r\n   return (\r\n      <div className={css.list}>\r\n         <h2 className={css.listTitle}>{title}</h2>\r\n         {filterTasks.map(task => {\r\n            return (\r\n               <Link to={`/tasks/${task.id}`} key={task.id} className={css.taskLink}>\r\n                  <div key={task.id} className={css.task}>{task.name}</div>\r\n               </Link>)\r\n         })}\r\n\r\n         {isFormOpen && (type === LIST_TYPE.BACKLOG) && (\r\n            <Forma addNewTask={addNewTask} isFormOpen={isFormOpen} setFormOpen={setFormOpen} isButtonSubmit={isButtonSubmit} setButtonSubmit={setButtonSubmit} ref={ref} />\r\n         )}\r\n\r\n         {isDropdownOpen && (type !== LIST_TYPE.BACKLOG) && (\r\n            <Dropdown isDropdownOpen={isDropdownOpen} setDropdownOpen={setDropdownOpen} isButtonSubmit={isButtonSubmit} setButtonSubmit={setButtonSubmit} tasks={tasks} setTasks={setTasks} filterTasks={filterTasks} dropdownTask={dropdownTask} title={title} type={type} />\r\n         )}\r\n\r\n         {isButtonSubmit && (type === LIST_TYPE.BACKLOG) &&\r\n            (< button className={css.submit}\r\n               type='submit'\r\n               form='btn'\r\n               ref={ref}>\r\n               Submit\r\n            </button >)\r\n         }\r\n         {!isButtonSubmit && isDisabled &&\r\n            (<button className={css.buttonDisabled} type='button' disabled={{ disabled: true }}>\r\n               <img className={css.plus} src={plus} alt='' />Add card</button>)\r\n         }\r\n         {\r\n            !isButtonSubmit && !isDisabled &&\r\n            (<button className={css.button} type='button' onClick={handleAddClick}>\r\n               <img className={css.plus} src={plus} alt='' />Add card</button>)\r\n         }\r\n      </div >\r\n   )\r\n}\r\nexport default List;","import React from 'react';\r\n//import uniqid from 'uniqid'; //эта библиотека создает уникальные id\r\nimport css from './Board.module.css';\r\nimport { LIST_TYPE, LIST_TITLE } from '../../config.js';\r\nimport List from '../list/List';\r\n\r\nconst Board = (props) => {\r\n   const { tasks, setTasks } = props\r\n\r\n   //функция добавляет новую задачу в Backlog\r\n   const addNewTask = (name, descriptions) => {\r\n      //создание новой задачи\r\n      const newTask = {\r\n         status: LIST_TYPE.BACKLOG,\r\n         id: String(Date.now()),\r\n         name: name,\r\n         descriptions: descriptions,\r\n         created: new Date().toISOString()\r\n      }\r\n      //обновим state: создадим новый массив, поместим в него задачи из старого массива\r\n      // и добавим в него новую задачу\r\n      setTasks([...tasks, newTask])\r\n   }\r\n\r\n   return (\r\n      <div className={css.board}>\r\n         {Object.values(LIST_TYPE).map(type => {\r\n            const filterTasks = tasks.filter(task => task.status === type)\r\n            return <List key={type} tasks={tasks} setTasks={setTasks} filterTasks={filterTasks} title={LIST_TITLE[type]} addNewTask={addNewTask} type={type} />\r\n         })\r\n         }\r\n      </div>\r\n   )\r\n}\r\nexport default Board;","export default __webpack_public_path__ + \"static/media/line1.e7b4bf1e.svg\";","export default __webpack_public_path__ + \"static/media/line2.21404a5c.svg\";","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\nimport css from './TaskDetail.module.css';\r\nimport line1 from '../../images/line1.svg';\r\nimport line2 from '../../images/line2.svg';\r\n\r\nconst TaskDetail = (props) => {\r\n   const match = useRouteMatch()\r\n   const { taskId } = match.params\r\n   const { tasks, setTasks } = props\r\n   const [isEdit, setEdit] = useState(false)\r\n   const [isButton, setButton] = useState(false)\r\n\r\n   const task = tasks.find(task => task.id === taskId)\r\n\r\n   const handleClick = () => {\r\n      setButton(!isButton)\r\n      setEdit(!isEdit)\r\n   }\r\n\r\n   const handleChange = (e) => {\r\n      const newTask = {\r\n         status: task.status,\r\n         id: task.id,\r\n         name: task.name,\r\n         descriptions: e.target.value,\r\n         created: new Date().toISOString()\r\n      }\r\n      const index = tasks.indexOf(task)\r\n      setTasks([...tasks.slice(0, index), newTask, ...tasks.slice((index + 1), tasks.length)])\r\n   }\r\n\r\n   return (\r\n      <div className={css.taskDetail}>\r\n         {task ?\r\n            (<>\r\n               <div className={css.taskHeader}>\r\n                  <h2 className={css.taskName}>{task.name}</h2>\r\n                  <Link to='/'>\r\n                     <div className={css.cross}>\r\n                        <img className={css.line1} src={line1} alt='' />\r\n                        <img className={css.line2} src={line2} alt='' />\r\n                     </div>\r\n                  </Link>\r\n               </div>\r\n               {!isEdit &&\r\n                  <p className={css.taskDescriptions}>{task.descriptions || 'This task has no description'}</p>}\r\n               {isEdit &&\r\n                  <textarea className={css.taskDescriptions}\r\n                     id='taskDescriptions'\r\n                     type='text'\r\n                     name='descriptions'\r\n                     onChange={handleChange}>\r\n                     {task.descriptions}</textarea>}\r\n               <button className={css.button} onClick={handleClick}>{!isButton ? \"Edit\" : \"Save\"}</button>\r\n            </>) :\r\n            (<>\r\n               <Link to='/' className={css.back}>&#8592; Back</Link>\r\n               <h2 className={css.taskName}>Task with this Id={taskId} does not exist</h2>\r\n            </>)\r\n         }\r\n      </div>\r\n   )\r\n}\r\nexport default TaskDetail;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport css from './Main.module.css';\r\nimport Board from '../board/Board';\r\nimport TaskDetail from '../task-detail/TaskDetail';\r\n\r\nconst Main = (props) => {\r\n   return (\r\n      <main className={css.main}>\r\n         <div className={css.wrapper}>\r\n            <Switch>\r\n               <Route exact path={'/'} >\r\n                  <Board {...props} />\r\n               </Route>\r\n               <Route path={'/tasks/:taskId'} >\r\n                  <TaskDetail {...props} />\r\n               </Route>\r\n            </Switch>\r\n         </div>\r\n      </main>\r\n   )\r\n}\r\nexport default Main;","import React from 'react';\r\nimport css from './Footer.module.css';\r\n\r\nconst Footer = (props) => {\r\n   const { tasks } = props\r\n   const taskBacklog = tasks.filter(task => task.status === \"backlog\")\r\n   const taskFinished = tasks.filter(task => task.status === \"finished\")\r\n   return (\r\n\r\n      <footer className={css.footer}>\r\n         <div className={css.wrapper}>\r\n            <div className={css.tasks}>\r\n               <h1 className={css.activeTasks}>Active tasks: {taskBacklog.length}</h1>\r\n               <h1 className={css.finishedTasks}>Finished tasks: {taskFinished.length}</h1>\r\n            </div>\r\n            <h1 className={css.info}>Kanban board by Tribendis N.V. 2021</h1>\r\n         </div>\r\n      </footer>\r\n\r\n   )\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Footer from './components/footer/Footer';\r\n//import data from './mock.json';\r\n\r\nfunction App() {\r\n  const initialState = JSON.parse(window.localStorage.getItem('tasks')) || []\r\n  const [tasks, setTasks] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    //console.log('localStorage=', tasks)\r\n  }, [tasks]) //callback запускается только когда изменяться данные в массиве [tasks]\r\n\r\n  return (\r\n    <div className='css.wrapper'>\r\n      <Router>\r\n        <Header />\r\n        <Main tasks={tasks} setTasks={setTasks} />\r\n        <Footer tasks={tasks} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskDetail\":\"TaskDetail_taskDetail__3eIhl\",\"taskHeader\":\"TaskDetail_taskHeader__RfBD6\",\"taskName\":\"TaskDetail_taskName__3z37h\",\"cross\":\"TaskDetail_cross__2UvrE\",\"line1\":\"TaskDetail_line1__2NihY\",\"line2\":\"TaskDetail_line2__1WahE\",\"taskDescriptions\":\"TaskDetail_taskDescriptions__1-Z1H\",\"back\":\"TaskDetail_back__25Ag-\",\"button\":\"TaskDetail_button__3YrB7\"};"],"sourceRoot":""}